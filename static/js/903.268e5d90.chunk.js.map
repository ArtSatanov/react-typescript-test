{"version":3,"file":"static/js/903.268e5d90.chunk.js","mappings":"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","sources":["components/Forms/FormStyles/FormsComponents.styled.ts","components/Forms/Signup/Signup.tsx","pages/RegisterPage/RegisterPage.tsx"],"sourcesContent":["import { styled } from '@mui/material/styles';\nimport { Box, Button } from '@mui/material';\n\nexport const StyledBox = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  gap: '20px',\n  justifyContent: 'center',\n  maxWidth: '300px',\n  border: '1px solid rgba(46, 47, 66, 0.1)',\n  borderRadius: '2%',\n  overflow: 'hidden',\n  backgroundColor: theme.palette.background.paper,\n  color: theme.palette.divider,\n  margin: '10px auto 50px',\n  paddingTop: '20px',\n}));\n\nexport const StyledForm = styled('form')(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  gap: '20px',\n  padding: '0 5px',\n  width: '100%',\n  color: theme.palette.divider,\n}));\n\nexport const StyledBtn = styled(Button)(({ theme }) => ({\n  color: theme.palette.divider,\n  fontSize: '18px',\n  fontWeight: 600,\n  borderRadius: '30px',\n  padding: '5px 30px',\n  marginBottom: '10px',\n  transition:\n    'opacity 250ms cubic-bezier(0.4, 0, 0.2, 1),transform 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n  ':hover': {\n    opacity: 1,\n    transform: 'scale(1.02)',\n  },\n}));\n","import { IUser, IValues } from '../../../interfaces/interfaces';\nimport { FormikHelpers, useFormik } from 'formik';\nimport { object, string, ObjectSchema } from 'yup';\nimport { AppDispatch } from '../../../services/redux/store';\nimport { signUpUser } from '../../../services/redux/operations/operations';\nimport { useDispatch } from 'react-redux';\nimport { TextField } from '@mui/material';\nimport {\n  StyledBox,\n  StyledBtn,\n  StyledForm,\n} from '../FormStyles/FormsComponents.styled';\n\nconst pwRegexp =\n  /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$ %^&*-]).{8,}$/;\n\nconst UserSignupSchema: ObjectSchema<IUser> = object({\n  name: string().required('Required'),\n  lastname: string(),\n  email: string()\n    .email('You have entered a valid email address!')\n    .required('Required'),\n  password: string()\n    .matches(\n      pwRegexp,\n      'Minimum eight characters, at least one upper case English letter, one lower case English letter, one number and one special character!'\n    )\n    .required('Required'),\n});\n\nexport const Signup = () => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      lastname: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: UserSignupSchema,\n    onSubmit: (values: IValues, action: FormikHelpers<IValues>) => {\n      dispatch(signUpUser(values));\n      action.resetForm();\n    },\n  });\n\n  return (\n    <StyledBox>\n      <h1>Signup</h1>\n      <StyledForm onSubmit={formik.handleSubmit}>\n        <TextField\n          fullWidth\n          id=\"name\"\n          name=\"name\"\n          label=\"Name\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n        />\n        <TextField\n          fullWidth\n          id=\"lastname\"\n          name=\"lastname\"\n          label=\"Last name\"\n          value={formik.values.lastname}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.touched.lastname && Boolean(formik.errors.lastname)}\n          helperText={formik.touched.lastname && formik.errors.lastname}\n        />\n        <TextField\n          fullWidth\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          fullWidth\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <StyledBtn variant=\"contained\" type=\"submit\">\n          Submit\n        </StyledBtn>\n      </StyledForm>\n    </StyledBox>\n  );\n};\n","import { Signup } from '../../components/Forms/Signup/Signup';\n\nconst RegisterPage = () => {\n  return (\n    <div>\n      <Signup />\n    </div>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["StyledBox","styled","Box","_ref","theme","display","flexDirection","alignItems","gap","justifyContent","maxWidth","border","borderRadius","overflow","backgroundColor","palette","background","paper","color","divider","margin","paddingTop","StyledForm","_ref2","padding","width","StyledBtn","Button","_ref3","fontSize","fontWeight","marginBottom","transition","opacity","transform","UserSignupSchema","object","name","string","required","lastname","email","password","matches","Signup","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","values","action","signUpUser","resetForm","_jsxs","children","_jsx","handleSubmit","TextField","fullWidth","id","label","value","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","helperText","variant","type","RegisterPage"],"sourceRoot":""}