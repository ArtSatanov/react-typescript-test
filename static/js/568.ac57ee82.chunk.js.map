{"version":3,"file":"static/js/568.ac57ee82.chunk.js","mappings":"qRAWA,MAAMA,GAAiBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAiBE,IAAA,IAAC,MAAEC,GAAOD,EAAA,MAAM,CACtD,qBAAsB,CACpBE,gBAAiBD,EAAME,QAAQC,OAAOC,OAExC,mCAAoC,CAClCC,OAAQ,GAEX,IAEKC,GAAkBT,EAAAA,EAAAA,IAAOU,EAAAA,EAAPV,EAAkBW,IAAA,IAAC,MAAER,GAAOQ,EAAA,MAAM,CACxD,CAAC,KAADC,OAAMC,EAAAA,EAAiBC,OAAS,CAC9BV,gBAAiBD,EAAME,QAAQU,OAAOC,MACtCC,MAAOd,EAAME,QAAQU,OAAOG,OAE9B,CAAC,KAADN,OAAMC,EAAAA,EAAiBM,OAAS,CAC9BC,SAAU,IAEb,IAEYC,EAAWA,KACtB,MAAMC,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IAEzB,IAAIC,EAAc,GAGlB,OAFAA,EAAKC,KAAKJ,IAGRK,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACG,EAAAA,EAAc,CAACC,UAAWC,EAAAA,EAAOC,GAAI,CAAEC,UAAW,QAASL,UAC1DM,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACH,GAAI,CAAEI,SAAU,KAAO,aAAW,mBAAkBR,SAAA,EACzDF,EAAAA,EAAAA,KAACW,EAAAA,EAAS,CAAAT,UACRM,EAAAA,EAAAA,MAAClC,EAAAA,EAAQ,CAAA4B,SAAA,EACPF,EAAAA,EAAAA,KAAClB,EAAe,CAAAoB,SAAC,UACjBF,EAAAA,EAAAA,KAAClB,EAAe,CAAC8B,MAAM,QAAOV,SAAC,WAC/BF,EAAAA,EAAAA,KAAClB,EAAe,CAAC8B,MAAM,QAAOV,SAAC,cAC/BF,EAAAA,EAAAA,KAAClB,EAAe,CAAC8B,MAAM,QAAOV,SAAC,UAC/BF,EAAAA,EAAAA,KAAClB,EAAe,CAAC8B,MAAM,QAAOV,SAAC,mBAGnCF,EAAAA,EAAAA,KAACa,EAAAA,EAAS,CAAAX,SACPJ,EAAKgB,KAAIC,IACRP,EAAAA,EAAAA,MAACpC,EAAc,CAAA8B,SAAA,EACbF,EAAAA,EAAAA,KAAClB,EAAe,CAACsB,UAAU,KAAKY,MAAM,MAAKd,SAAA,GAAAjB,OACrC8B,EAAIE,KAAI,KAAAhC,OAAI8B,EAAIG,aAEtBlB,EAAAA,EAAAA,KAAClB,EAAe,CAAC8B,MAAM,QAAOV,SAAEa,EAAII,SACpCnB,EAAAA,EAAAA,KAAClB,EAAe,CAAC8B,MAAM,QAAOV,SAAEa,EAAIK,YACpCpB,EAAAA,EAAAA,KAAClB,EAAe,CAAC8B,MAAM,QAAOV,SAAEa,EAAIE,QACpCjB,EAAAA,EAAAA,KAAClB,EAAe,CAAC8B,MAAM,QAAOV,SAAEa,EAAIG,aAPjBH,EAAII,iBAahC,ECtDP,EARiBE,KAEbrB,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAACN,EAAQ,K","sources":["components/UserData/UserData.tsx","pages/User/UserPage.tsx"],"sourcesContent":["import { styled } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from 'services/redux/selectors/selectors';\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  '&:nth-of-type(odd)': {\n    backgroundColor: theme.palette.action.hover,\n  },\n  '&:last-child td, &:last-child th': {\n    border: 0,\n  },\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n  },\n}));\n\nexport const UserData = () => {\n  const user = useSelector(selectUser);\n\n  let rows: any[] = [];\n  rows.push(user);\n\n  return (\n    <>\n      <TableContainer component={Paper} sx={{ marginTop: '30px' }}>\n        <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>User</StyledTableCell>\n              <StyledTableCell align=\"right\">Email</StyledTableCell>\n              <StyledTableCell align=\"right\">Password</StyledTableCell>\n              <StyledTableCell align=\"right\">Name</StyledTableCell>\n              <StyledTableCell align=\"right\">Lastname</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map(row => (\n              <StyledTableRow key={row.email}>\n                <StyledTableCell component=\"th\" scope=\"row\">\n                  {`${row.name} ${row.lastname}`}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">{row.email}</StyledTableCell>\n                <StyledTableCell align=\"right\">{row.password}</StyledTableCell>\n                <StyledTableCell align=\"right\">{row.name}</StyledTableCell>\n                <StyledTableCell align=\"right\">{row.lastname}</StyledTableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n};\n","import { UserData } from 'components/UserData/UserData';\n\nconst UserPage = () => {\n  return (\n    <div>\n      <UserData />\n    </div>\n  );\n};\n\nexport default UserPage;\n"],"names":["StyledTableRow","styled","TableRow","_ref","theme","backgroundColor","palette","action","hover","border","StyledTableCell","TableCell","_ref2","concat","tableCellClasses","head","common","black","color","white","body","fontSize","UserData","user","useSelector","selectUser","rows","push","_jsx","_Fragment","children","TableContainer","component","Paper","sx","marginTop","_jsxs","Table","minWidth","TableHead","align","TableBody","map","row","scope","name","lastname","email","password","UserPage"],"sourceRoot":""}