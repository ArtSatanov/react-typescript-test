{"version":3,"file":"static/js/721.b7643cab.chunk.js","mappings":"gMAGO,MAAMA,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAYE,IAAA,IAAC,MAAEC,GAAOD,EAAA,MAAM,CACnDE,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,IAAK,OACLC,eAAgB,SAChBC,SAAU,QACVC,OAAQ,kCACRC,aAAc,KACdC,SAAU,SACVC,gBAAiBV,EAAMW,QAAQC,WAAWC,MAC1CC,MAAOd,EAAMW,QAAQI,QACrBC,OAAQ,iBACRC,WAAY,OACb,IAEYC,GAAarB,EAAAA,EAAAA,IAAO,OAAPA,EAAesB,IAAA,IAAC,MAAEnB,GAAOmB,EAAA,MAAM,CACvDlB,QAAS,OACTC,cAAe,SACfC,WAAY,SACZE,eAAgB,SAChBD,IAAK,OACLgB,QAAS,QACTC,MAAO,OACPP,MAAOd,EAAMW,QAAQI,QACtB,IAEYO,GAAYzB,EAAAA,EAAAA,IAAO0B,EAAAA,EAAP1B,EAAe2B,IAAA,IAAC,MAAExB,GAAOwB,EAAA,MAAM,CACtDV,MAAOd,EAAMW,QAAQI,QACrBU,SAAU,OACVC,WAAY,IACZlB,aAAc,OACdY,QAAS,WACTO,aAAc,OACdC,WACE,0FACF,SAAU,CACRC,QAAS,EACTC,UAAW,eAEd,G,uHC9BD,MAAMC,GACJC,EAAAA,EAAAA,IAAO,CACLC,OAAOC,EAAAA,EAAAA,MACJD,MAAM,2CACNE,SAAS,YACZC,UAAUF,EAAAA,EAAAA,MAASC,SAAS,cAGnBE,EAASA,KACpB,MAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbT,MAAO,GACPG,SAAU,IAEZO,iBAAkBZ,EAClBa,SAAUA,CACRC,EACAC,KAEAR,GAASS,EAAAA,EAAAA,IAAUF,IACnBC,EAAOE,WAAW,IAItB,OACEC,EAAAA,EAAAA,MAACrD,EAAAA,EAAS,CAAAsD,SAAA,EACRC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJD,EAAAA,EAAAA,MAAC/B,EAAAA,GAAU,CAAC0B,SAAUJ,EAAOY,aAAaF,SAAA,EACxCC,EAAAA,EAAAA,KAACE,EAAAA,EAAS,CACRC,WAAS,EACTC,GAAG,QACHC,KAAK,QACLC,MAAM,QACNC,MAAOlB,EAAOK,OAAOZ,MACrB0B,SAAUnB,EAAOoB,aACjBC,OAAQrB,EAAOsB,WACfC,MAAOvB,EAAOwB,QAAQ/B,OAASgC,QAAQzB,EAAO0B,OAAOjC,OACrDkC,WAAY3B,EAAOwB,QAAQ/B,OAASO,EAAO0B,OAAOjC,SAEpDkB,EAAAA,EAAAA,KAACE,EAAAA,EAAS,CACRC,WAAS,EACTC,GAAG,WACHC,KAAK,WACLC,MAAM,WACNC,MAAOlB,EAAOK,OAAOT,SACrBuB,SAAUnB,EAAOoB,aACjBC,OAAQrB,EAAOsB,WACfC,MAAOvB,EAAOwB,QAAQ5B,UAAY6B,QAAQzB,EAAO0B,OAAO9B,UACxD+B,WAAY3B,EAAOwB,QAAQ5B,UAAYI,EAAO0B,OAAO9B,YAEvDe,EAAAA,EAAAA,KAAC7B,EAAAA,EAAS,CAAC8C,QAAQ,YAAYC,KAAK,SAAQnB,SAAC,gBAIrC,EC3DhB,EARkBoB,KAEdnB,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACd,EAAM,K","sources":["components/Forms/FormStyles/FormsComponents.styled.ts","components/Forms/Signin/Signin.tsx","pages/LoginPage/LoginPage.tsx"],"sourcesContent":["import { styled } from '@mui/material/styles';\nimport { Box, Button } from '@mui/material';\n\nexport const StyledBox = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  gap: '20px',\n  justifyContent: 'center',\n  maxWidth: '300px',\n  border: '1px solid rgba(46, 47, 66, 0.1)',\n  borderRadius: '2%',\n  overflow: 'hidden',\n  backgroundColor: theme.palette.background.paper,\n  color: theme.palette.divider,\n  margin: '10px auto 50px',\n  paddingTop: '20px',\n}));\n\nexport const StyledForm = styled('form')(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  gap: '20px',\n  padding: '0 5px',\n  width: '100%',\n  color: theme.palette.divider,\n}));\n\nexport const StyledBtn = styled(Button)(({ theme }) => ({\n  color: theme.palette.divider,\n  fontSize: '18px',\n  fontWeight: 600,\n  borderRadius: '30px',\n  padding: '5px 30px',\n  marginBottom: '10px',\n  transition:\n    'opacity 250ms cubic-bezier(0.4, 0, 0.2, 1),transform 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n  ':hover': {\n    opacity: 1,\n    transform: 'scale(1.02)',\n  },\n}));\n","import { FormikHelpers, useFormik } from 'formik';\nimport { IValues, IUser } from '../../../interfaces/interfaces';\nimport { object, string, ObjectSchema } from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { AppDispatch } from '../../../services/redux/store';\nimport { logInUser } from '../../../services/redux/operations/operations';\nimport { TextField } from '@mui/material';\nimport {\n  StyledBox,\n  StyledBtn,\n  StyledForm,\n} from '../FormStyles/FormsComponents.styled';\n\nconst UserSigninSchema: ObjectSchema<Pick<IUser, 'email' | 'password'>> =\n  object({\n    email: string()\n      .email('You have entered a valid email address!')\n      .required('Required'),\n    password: string().required('Required'),\n  });\n\nexport const Signin = () => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: UserSigninSchema,\n    onSubmit: (\n      values: Pick<IValues, 'email' | 'password'>,\n      action: FormikHelpers<Pick<IValues, 'email' | 'password'>>\n    ) => {\n      dispatch(logInUser(values));\n      action.resetForm();\n    },\n  });\n\n  return (\n    <StyledBox>\n      <h1>Signup</h1>\n      <StyledForm onSubmit={formik.handleSubmit}>\n        <TextField\n          fullWidth\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          fullWidth\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <StyledBtn variant=\"contained\" type=\"submit\">\n          Submit\n        </StyledBtn>\n      </StyledForm>\n    </StyledBox>\n  );\n};\n","import { Signin } from '../../components/Forms/Signin/Signin';\n\nconst LoginPage = () => {\n  return (\n    <div>\n      <Signin />\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["StyledBox","styled","Box","_ref","theme","display","flexDirection","alignItems","gap","justifyContent","maxWidth","border","borderRadius","overflow","backgroundColor","palette","background","paper","color","divider","margin","paddingTop","StyledForm","_ref2","padding","width","StyledBtn","Button","_ref3","fontSize","fontWeight","marginBottom","transition","opacity","transform","UserSigninSchema","object","email","string","required","password","Signin","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","values","action","logInUser","resetForm","_jsxs","children","_jsx","handleSubmit","TextField","fullWidth","id","name","label","value","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","helperText","variant","type","LoginPage"],"sourceRoot":""}